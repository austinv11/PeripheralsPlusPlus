buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
        jcenter()
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

repositories {
    maven {
        url  "http://jcenter.bintray.com"
    }
    maven {
        name = "chickenbones"
        url = "http://chickenbones.net/maven"
    }
}

apply plugin: 'forge'

ext.buildNumber = System.getenv("BUILD_ID") ?: "dev"
version = "1.3.0-$buildNumber"
group= "com.austinv11.peripheralsplusplus" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "Peripherals++"

minecraft {
    version = "1.7.10-10.13.2.1291"
    runDir = "eclipse"
    replace("@VERSION@",project.version)
}

configurations {
	extcompile
}

dependencies {
    // you may put jars on which you depend on in ./libs
    // or you may define them like so..
    //compile "some.group:artifact:version:classifier"
    //compile "some.group:artifact:version"
      
    // real examples
    //compile 'com.mod-buildcraft:buildcraft:6.0.8:dev'  // adds buildcraft to the dev env
    //compile 'com.googlecode.efficient-java-matrix-library:ejml:0.24' // adds ejml to the dev env

    // for more info...
    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
    // http://www.gradle.org/docs/current/userguide/dependency_management.html
	extcompile "com.austinv11.collectiveframework:CollectiveFramework:1.0.0-82:deobf"
    compile "codechicken:NotEnoughItems:1.7.10-1.0.3.74:dev"
	compile "codechicken:CodeChickenLib:1.7.10-1.1.1.99:dev"
	compile "codechicken:CodeChickenCore:1.7.10-1.0.4.29:dev"
	compile configurations.extcompile
}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

jar {
    manifest {
        attributes 'FMLAT': 'ppp_at.cfg'
    }
	from configurations.extcompile.collect {
		it.isDirectory() ? it : zipTree(it)
	}
}

idea { 
    module { 
        inheritOutputDirs = true 
    } 
}
